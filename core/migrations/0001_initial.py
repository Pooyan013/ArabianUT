# Generated by Django 5.2.3 on 2025-07-17 21:42

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=50, verbose_name='Brand')),
                ('model', models.CharField(default='N/A', max_length=50, verbose_name='Model')),
                ('car_picture', models.ImageField(blank=True, null=True, upload_to='cars/', verbose_name='Car Picture')),
                ('plate_number', models.CharField(max_length=20, unique=True, verbose_name='Plate Number')),
                ('color', models.CharField(max_length=20, verbose_name='Color')),
                ('year', models.IntegerField(verbose_name='Year Manufactured')),
                ('claim_number', models.CharField(default='No Claim', max_length=50, verbose_name='Claim Number')),
                ('registered_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Time Registered')),
                ('estimated_cost', models.CharField(choices=[('nodamage', 'No Damage'), ('cheap', 'Cheap'), ('lite', 'Lite'), ('mid', 'Mid'), ('heavy', 'Heavy')], default='mid', max_length=10, verbose_name='Estimated Cost Level')),
                ('registered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Registered By')),
            ],
        ),
        migrations.CreateModel(
            name='RepairJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending_expert', 'Pending for Expert'), ('quotation', 'Quotation'), ('pending_approval', 'Pending Approval'), ('pending_start', 'Pending to Start'), ('pending_part', 'Pending Part'), ('working', 'Working'), ('ready_exit', 'Ready To Exit'), ('exit', 'Exit (Awaiting LPO)'), ('archived', 'Archived')], default='pending_expert', max_length=20, verbose_name='Status')),
                ('deal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Deal Amount')),
                ('expert_inspected_at', models.DateTimeField(blank=True, null=True, verbose_name='Time of Expert Inspection')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Time of Approval')),
                ('work_started_at', models.DateTimeField(blank=True, null=True, verbose_name='Time Work Started')),
                ('parts_pending_at', models.DateTimeField(blank=True, null=True, verbose_name='Time Parts Became Pending')),
                ('work_finished_at', models.DateTimeField(blank=True, null=True, verbose_name='Time Work Finished')),
                ('exited_at', models.DateTimeField(blank=True, null=True, verbose_name='Time of Exit')),
                ('timer_start_time', models.DateTimeField(blank=True, null=True, verbose_name='Timer Start Time')),
                ('timer_end_time', models.DateTimeField(blank=True, null=True, verbose_name='Timer End Time')),
                ('lpo_confirmed', models.BooleanField(default=False, verbose_name='LPO Confirmed')),
                ('sign_confirmed', models.BooleanField(default=False, verbose_name='Sign Confirmed')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='core.car', verbose_name='Car')),
            ],
        ),
        migrations.CreateModel(
            name='QuotationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Item Name')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='quotations/', verbose_name='Item Picture')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Estimated Price')),
                ('repair_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotation_items', to='core.repairjob')),
            ],
        ),
        migrations.CreateModel(
            name='PurchasedPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Part Name')),
                ('invoice_picture', models.ImageField(blank=True, null=True, upload_to='invoices/', verbose_name='Invoice/Receipt Picture')),
                ('final_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Actual Price Paid')),
                ('purchased_on', models.DateField(verbose_name='Date Purchased')),
                ('repair_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchased_parts', to='core.repairjob')),
            ],
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Part Name')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='parts/', verbose_name='Part Picture')),
                ('price', models.FloatField(default=10.0, max_length=50, verbose_name='PartPrice')),
                ('is_bought', models.BooleanField(default=False, verbose_name='Is Bought?')),
                ('repair_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parts', to='core.repairjob', verbose_name='Repair Job')),
            ],
        ),
    ]
